<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--扫描注解-->
    <context:component-scan base-package="com.fan"></context:component-scan>
    <!--引进外部文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
    </bean>

    <!--  创建Mybatis的工厂对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--设置数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!--分页-->
        <property name="plugins">
            <set>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialiect">mysql</prop>
                            <prop key="resonable">true</prop>
                            <prop key="supportMethodsArguements">true</prop>
                        </props>
                    </property>
                </bean>
            </set>
        </property>
        <!-- 加载mybatis主配置文件 -->
        <!--<property name="configLocation" value="classpath:mybatis.xml"/>-->
        <!-- 加载映射文件 -->
        <property name="mapperLocations" value="classpath:com/fan/dao/*.xml"/>
    </bean>
    <!--事务-->
    <!-- 1配置事务管理类 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 2配置事务的增强 -->
    <tx:advice id="interceptor" transaction-manager="dataSourceTransactionManager">
        <tx:attributes>
            <!-- 针对使用事务的add开头的方法
   			read-only 是否只读，true 是，false 可读可写
   			如果有插入等操作，设为为true，运行程序会报异常-->
            <tx:method name="add*" read-only="false" propagation="REQUIRED"/>
            <tx:method name="update*" read-only="false" propagation="REQUIRED"/>
            <tx:method name="delete*" read-only="false" propagation="REQUIRED"/>
            <tx:method name="select*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="NOT_SUPPORTED"/>
        </tx:attributes>
    </tx:advice>
    <!--aop-->
    <aop:config>
        <!--切入点-->
        <aop:pointcut id="pc" expression="execution(* com.fan.service.LoginService.*(..))"/>

        <!--事务通知-->
        <aop:advisor advice-ref="interceptor" pointcut-ref="pc"></aop:advisor>
    </aop:config>
    <!--设置Mybatis的映射接口 -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="com.fan.dao"></property>
    </bean>

</beans>